<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- Indicates that the app can use the camera, but it's not a required feature -->
    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />

    <!--Permission for Internet access-->
    <uses-permission android:name="android.permission.INTERNET"/>
    <!--Permission for Camera access-->
    <uses-permission android:name="android.permission.CAMERA" />
    <!--Permissions for Notification-->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM" />
    <!--Permissions for Microphone access-->
    <uses-permission android:name="android.permission.RECORD_AUDIO"/> <!--This permission is required for microphone access.-->
    <uses-permission android:name="android.permission.BLUETOOTH"/> <!--This permission is required because speech recognition may use remote services.-->
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/> <!--This permission is required because speech recognition can use bluetooth headsets when connected.-->
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT"/> <!--This permission is required because speech recognition can use bluetooth headsets when connected.-->

    <!-- Queries section to specify that the app can interact with the speech recognition service -->
    <queries>
        <intent>
            <action android:name="android.speech.RecognitionService" />
        </intent>
    </queries>

    <application
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher"
        android:label="Flutter SDK demo">

        <receiver android:exported="false" android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver" />
        <receiver android:exported="false" android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED"/>
                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
                <action android:name="com.htc.intent.action.QUICKBOOT_POWERON"/>
            </intent-filter>
        </receiver>

        <activity
            android:name=".MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:exported="true"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
                android:name="io.flutter.embedding.android.NormalTheme"
                android:resource="@style/NormalTheme" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>
